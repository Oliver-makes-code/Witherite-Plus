plugins {
    id 'fabric-loom' version '0.11-SNAPSHOT'
    id "com.modrinth.minotaur" version "1.1.0"
    id 'maven-publish'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group
def changelog_text = 'View the changelog here: https://github.com/FlamingCherry/Witherite/blob/main/CHANGELOG.md'

import com.matthewprenger.cursegradle.CurseUploadTask
import com.modrinth.minotaur.TaskModrinthUpload

task publishModrinth (type: TaskModrinthUpload) {
    token = System.getenv("MODRINTH")
    projectId = 'VQEUPUsB'
    versionNumber = version
    versionName = "$archivesBaseName-$version"
    uploadFile = remapJar
    addGameVersion("${project.minecraft_version}")
    addLoader('fabric')
    releaseType = 'beta'
    changelog = changelog_text
}

curseforge {
    if (System.getenv("CURSE")) {
        apiKey = System.getenv("CURSE")
    }

    project {
        id = '467023'
        changelog = changelog_text
        releaseType = "beta"
        addGameVersion "${project.minecraft_version}"
        addGameVersion 'Fabric'
        addGameVersion 'Java 16'
        mainArtifact(remapJar) {
            displayName = "$archivesBaseName-$version"
        }
        afterEvaluate {
            uploadTask.dependsOn("remapJar")
        }
    }

    options {
        forgeGradleIntegration = false
    }
}

repositories {
    mavenCentral()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}
